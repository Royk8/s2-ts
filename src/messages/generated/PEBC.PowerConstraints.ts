/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * ID of this message
 */
export type ID = string;
/**
 * Identifier of this PEBC.PowerConstraints. Must be unique in the scope of the Resource Manager, for at least the duration of the session between Resource Manager and CEM.
 */
export type ID1 = string;
/**
 * Type of consequence of limiting power
 */
export type PEBC_PowerEnvelopeConsequenceType = "VANISH" | "DEFER";
/**
 * Type of power quantity this PEBC.AllowedLimitRange applies to
 */
export type CommodityQuantity =
  | "ELECTRIC.POWER.L1"
  | "ELECTRIC.POWER.L2"
  | "ELECTRIC.POWER.L3"
  | "ELECTRIC.POWER.3_PHASE_SYMMETRIC"
  | "NATURAL_GAS.FLOW_RATE"
  | "HYDROGEN.FLOW_RATE"
  | "HEAT.TEMPERATURE"
  | "HEAT.FLOW_RATE"
  | "HEAT.THERMAL_POWER"
  | "OIL.FLOW_RATE";
/**
 * Indicates if this ranges applies to the upper limit or the lower limit
 */
export type PEBC_PowerEnvelopeLimitType = "UPPER_LIMIT" | "LOWER_LIMIT";

export interface PEBC_PowerConstraints {
  message_type: "PEBC.PowerConstraints";
  message_id: ID;
  id: ID1;
  /**
   * Moment this PEBC.PowerConstraints start to be valid
   */
  valid_from: string;
  /**
   * Moment until this PEBC.PowerConstraints is valid. If valid_until is not present, there is no determined end time of this PEBC.PowerConstraints.
   */
  valid_until?: string;
  consequence_type: PEBC_PowerEnvelopeConsequenceType;
  /**
   * The actual constraints. There shall be at least one PEBC.AllowedLimitRange for the UPPER_LIMIT and at least one AllowedLimitRange for the LOWER_LIMIT. It is allowed to have multiple PEBC.AllowedLimitRange objects with identical CommodityQuantities and LimitTypes.
   *
   * @minItems 2
   * @maxItems 100
   */
  allowed_limit_ranges: [PEBC_AllowedLimitRange, PEBC_AllowedLimitRange, ...PEBC_AllowedLimitRange[]];
}
export interface PEBC_AllowedLimitRange {
  commodity_quantity: CommodityQuantity;
  limit_type: PEBC_PowerEnvelopeLimitType;
  range_boundary: NumberRange;
  /**
   * Indicates if this PEBC.AllowedLimitRange may only be used during an abnormal condition
   */
  abnormal_condition_only: boolean;
}
/**
 * Boundaries of the power range of this PEBC.AllowedLimitRange. The CEM is allowed to choose values within this range for the power envelope for the limit as described in limit_type. The start of the range shall be smaller or equal than the end of the range.
 */
export interface NumberRange {
  /**
   * Number that defines the start of the range
   */
  start_of_range: number;
  /**
   * Number that defines the end of the range
   */
  end_of_range: number;
}
